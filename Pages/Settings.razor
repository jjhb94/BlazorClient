@page "/settings"
@using BlazorClient.Models
@using BlazorClient.Services
@inject ISettingsService SettingsService
@inject ILogger<Settings> Logger

<PageTitle>Settings</PageTitle>

<h1>Settings</h1>

<div>
    <label for="endpoint">Endpoint:</label>
    <input type="url" id="endpoint" @bind="endpoint" class="input-field" />
</div>
<div>
    <label for="deploymentName">Deployment Name:</label>
    <input type="text" id="deploymentName" @bind="deploymentName" class="input-field" />
</div>
<div>
    <label for="apiKey">API Key / GitHub Token:</label>
    <input type="password" id="apiKey" @bind="apiKey" class="input-field" />
</div>

<button class="btn btn-primary" @onclick="SaveSettings">SAVE</button>
<button class="btn btn-secondary" @onclick="SetOllamaDefaults">Set Ollama Default values</button>
<button class="btn btn-secondary" @onclick="SetGitHubModelsDefaults">Set GitHub Models Default Endpoint</button>

<p></p>
<p>
    To create a GitHub token to be used in the <strong>API Key / GitHub Token</strong> field, please follow the instructions
    <a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens" target="_blank">here</a>.
</p>

@if (!string.IsNullOrEmpty(saveMessage))
{
    <div class="save-message">@saveMessage</div>
}

@code {
    private string endpoint = string.Empty;
    private string apiKey = string.Empty;
    private string deploymentName = string.Empty;
    private string saveMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var settings = await SettingsService.GetSettingsAsync();
            endpoint = settings.Endpoint;
            apiKey = settings.ApiKey;
            deploymentName = settings.DeploymentName;
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error loading settings");
        }
    }

    private async Task SaveSettings()
    {
        try
        {
            var settings = new ChatSettings
            {
                Endpoint = endpoint,
                ApiKey = apiKey,
                DeploymentName = deploymentName,
                ClientMode = DetermineClientMode()
            };

            await SettingsService.SaveSettingsAsync(settings);
            saveMessage = "Settings have been saved successfully.";
            
            // Clear message after 3 seconds
            _ = Task.Delay(3000).ContinueWith(_ => 
            {
                saveMessage = string.Empty;
                InvokeAsync(StateHasChanged);
            });
        }
        catch (Exception ex)
        {
            Logger.LogError(ex, "Error saving settings");
            saveMessage = $"Error saving settings: {ex.Message}";
        }
    }

    private void SetGitHubModelsDefaults()
    {
        endpoint = "https://models.inference.ai.azure.com";
        apiKey = "<your GitHub Personal Access Token here>";
        deploymentName = "<your model name here>";
    }

    private void SetOllamaDefaults()
    {
        endpoint = "http://localhost:11434/";
        apiKey = string.Empty;
        deploymentName = "llama3.2";
    }

    private string DetermineClientMode()
    {
        if (endpoint.Contains("localhost", StringComparison.OrdinalIgnoreCase))
            return "Ollama";
        if (endpoint.Contains("models.inference.ai.azure.com", StringComparison.OrdinalIgnoreCase))
            return "GitHub Models";
        if (string.IsNullOrEmpty(apiKey))
            return "Azure with Default Credentials";
        return "Using Endpoint and ApiKey";
    }
}

<style>
    h1 {
        color: #4a148c;
    }

    .input-field {
        display: block;
        margin-bottom: 10px;
        padding: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
        width: 100%;
        max-width: 400px;
    }

    .btn-primary {
        background-color: #6a1b9a;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 4px;
        cursor: pointer;
        margin-right: 10px;
        margin-bottom: 10px;
    }

    .btn-primary:hover {
        background-color: #4a148c;
    }

    .btn-secondary {
        background-color: #e0e0e0;
        color: #333;
        border: none;
        padding: 10px 20px;
        border-radius: 4px;
        cursor: pointer;
        margin-right: 10px;
        margin-bottom: 10px;
    }

    .btn-secondary:hover {
        background-color: #ccc;
    }

    .save-message {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
        padding: 10px;
        border-radius: 4px;
        margin-top: 10px;
        max-width: 400px;
    }
</style>
